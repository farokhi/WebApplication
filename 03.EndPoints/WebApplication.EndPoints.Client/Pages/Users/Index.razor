@page "/users"
@using ViewModels.User

@{
    string strTitle =
        string.Format("{0} {1}",
        Resources.Actions.ListOf,
        Resources.Models.User.EntitiesName);

    string strCreate =
        string.Format("{0} {1}",
        Resources.Actions.CreateOf,
        Resources.Models.User.EntityName);
}

<div class="col-12">
    <div class="accordion basic-accordion" id="accordion" role="tablist">
        <div class="card">
            <div class="card-header" role="tab" id="heading">
                <h6 class="mb-0">
                    <a class="collapsed" data-toggle="collapse" href="#collapse" aria-expanded="false" aria-controls="collapse">
                        <i class="card-icon mdi mdi-magnify"></i>@Resources.Buttons.Search
                    </a>
                </h6>
            </div>
            <div id="collapse" class="collapse" role="tabpanel" aria-labelledby="heading" data-parent="#accordion">
                <div class="card-body">
                    <EditForm Model="request">

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <div class="form-check form-check-flat">
                                        <label class="form-check-label">
                                            <input type="checkbox" id="@nameof(request.IsActive)" class="form-check-input" @bind="request.IsActive" />@Resources.DataDictionary.IsActive<i class="input-helper"></i>
                                        </label>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label" for="@nameof(request.FullName)">@Resources.Models.User.FullName</label>
                                    <div class="col-sm-9">
                                        <InputText id="@nameof(request.FullName)" class="form-control" @bind-Value="request.FullName"></InputText>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label" for="@nameof(request.EmailAddress)">@Resources.Models.User.EmailAddress</label>
                                    <div class="col-sm-9">
                                        <InputText id="@nameof(request.EmailAddress)" class="form-control" @bind-Value="request.EmailAddress"></InputText>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label" for="@nameof(request.NationalCode)">@Resources.Models.User.NationalCode</label>
                                    <div class="col-sm-9">
                                        <InputText id="@nameof(request.NationalCode)" class="form-control" @bind-Value="request.NationalCode"></InputText>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label" for="@nameof(request.UserType)">@Resources.Models.User.UserType</label>
                                    <div class="col-sm-9">

                                        <select id="@nameof(request.UserType)" class="form-control" @bind="request.UserType">
                                            <option></option>
                                            @foreach (var item in request.GetUserTypes())
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>

                                    </div>
                                </div>
                            </div>
                        </div>

                        <button type="button" class="btn btn-success mr-2" @onclick="search">@Resources.Buttons.Search</button>
                        <button type="button" class="btn btn-light" @onclick="reset">@Resources.Buttons.Cancel</button>

                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-12">

    <div class="card">
        <div class="card-body">
            <h4 class="card-title">@strTitle</h4><p class="card-description"></p>
            @if (data.Result == null)
            {
                <p><em>@Resources.DataDictionary.Loading</em></p>
            }
            else
            {
                <p class="card-description">
                    <a class="btn btn-primary btn-fw" href="/User/Create">@strCreate</a>
                </p>

                <MudTable ServerData="@ServerData" Hover="true" @ref="table">
                    <HeaderContent>
                        <MudTh Style="width:100px">@Resources.DataDictionary.IsActive</MudTh>
                        <MudTh>@Resources.Models.User.FullName</MudTh>
                        <MudTh>@Resources.Models.User.EmailAddress</MudTh>
                        <MudTh>@Resources.Models.User.CellPhoneNumber</MudTh>
                        <MudTh Style="width:150px">@Resources.Models.User.UserType</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="@Resources.DataDictionary.IsActive">
                            <input type="checkbox" checked="@context.IsActive" disabled />
                        </MudTd>
                        <MudTd DataLabel="@Resources.Models.User.FullName">@context.FullName</MudTd>
                        <MudTd DataLabel="@Resources.Models.User.EmailAddress">
                            <div class="text-left">
                                @context.EmailAddress
                            </div>
                        </MudTd>
                        <MudTd DataLabel="@Resources.Models.User.CellPhoneNumber">
                            <div class="text-left">
                                @context.CellPhoneNumber
                            </div>
                        </MudTd>
                        <MudTd DataLabel="@Resources.Models.User.UserType">@context.UserTypeValue</MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[]{10, 50, 100}" />
                    </PagerContent>
                </MudTable>

            }
        </div>
    </div>
</div>

@code {

    protected ViewPagingDataResult<UserDataViewModel> data { get; set; }
    protected SearchViewModel request { get; set; }
    private MudTable<UserDataViewModel> table;

    protected override void OnInitialized()
    {
        data = new ViewPagingDataResult<UserDataViewModel>();
        request = new SearchViewModel();
    }

    async Task<TableData<UserDataViewModel>> ServerData(TableState args = null)
    {
        request.PageIndex = args.Page;
        request.TotalCount = data.TotalCount;

        await getData();

        return new TableData<UserDataViewModel>() { TotalItems = data.TotalCount, Items = data.Result };
    }

    async Task reset()
    {
        request = new SearchViewModel();
        await getData();
        table.ReloadServerData();
    }

    async Task search()
    {
        await getData();
        table.ReloadServerData();
    }

    async Task remove(int userId)
    {
        await client.DeleteAsync($"Users?userId={userId}");
        table.ReloadServerData();
    }

    async Task getData()
    {
        var response =
            await client.PostAsJsonAsync($"Users/GetData", request);

        data = await response.Content.ReadFromJsonAsync<ViewPagingDataResult<UserDataViewModel>>();

    }

}