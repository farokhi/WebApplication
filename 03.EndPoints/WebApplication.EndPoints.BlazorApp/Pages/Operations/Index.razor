@page "/operations"
@using ViewModels.Operation

@{
    string strTitle =
        string.Format("{0} {1}",
        Resources.Actions.ListOf,
        Resources.Models.Operation.EntityName);

    string strCreate =
        string.Format("{0} {1}",
        Resources.Actions.CreateOf,
        Resources.Models.Operation.EntityName);
}

<div class="col-12">
    <div class="accordion basic-accordion" id="accordion" role="tablist">
        <div class="card">
            <div class="card-header" role="tab" id="heading">
                <h6 class="mb-0">
                    <a class="collapsed" data-toggle="collapse" href="#collapse" aria-expanded="false" aria-controls="collapse">
                        <i class="card-icon mdi mdi-magnify"></i>@Resources.Buttons.Search
                    </a>
                </h6>
            </div>
            <div id="collapse" class="collapse" role="tabpanel" aria-labelledby="heading" data-parent="#accordion">
                <div class="card-body">
                    <EditForm Model="request">

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <div class="form-check form-check-flat">
                                        <label class="form-check-label">
                                            <input type="checkbox" id="isActive" class="form-check-input" @bind="request.IsActive" />@Resources.DataDictionary.IsActive<i class="input-helper"></i>
                                        </label>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label" for="name">@Resources.Models.Operation.Name</label>
                                    <div class="col-sm-9">
                                        <InputText id="name" class="form-control" @bind-Value="request.Name"></InputText>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label" for="displayName">@Resources.DataDictionary.DisplayName</label>
                                    <div class="col-sm-9">
                                        <InputText id="displayName" class="form-control" @bind-Value="request.DisplayName"></InputText>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label" for="accessType">@Resources.Models.Operation.AccessType</label>
                                    <div class="col-sm-9">

                                        <select id="accessType" class="form-control" @bind="request.AccessType">
                                            <option></option>
                                            @foreach (var item in request.GetAccessTypes())
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>

                                    </div>
                                </div>
                            </div>
                        </div>

                        <button type="button" class="btn btn-success mr-2" @onclick="search">@Resources.Buttons.Search</button>
                        <button type="button" class="btn btn-light" @onclick="reset">@Resources.Buttons.Cancel</button>

                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-12">

    <div class="card">
        <div class="card-body">
            <h4 class="card-title">@strTitle</h4><p class="card-description"></p>
            @if (data.Result == null)
            {
                <p><em>@Resources.DataDictionary.Loading</em></p>
            }
            else
            {
                <p class="card-description">
                    <a class="btn btn-primary btn-fw" href="/Operation/Create">@strCreate</a>
                </p>
                <TelerikGrid Data="@data.Result"
                             OnRead=@ReadItems
                             TotalCount="@data.TotalCount"
                             Pageable="true"
                             Class="no-scroll">
                    <GridColumns>
                        <GridColumn Title="@Resources.DataDictionary.IsActive" Width="50px">
                            <Template>
                                <input type="checkbox" checked="@((context as OperationDataViewModel).IsActive)" disabled />
                            </Template>
                        </GridColumn>
                        <GridColumn Title="@Resources.Models.Operation.Name" Width="200px">
                            <Template>
                                <div class="text-left">
                                    @((context as OperationDataViewModel).Name)
                                </div>
                            </Template>
                        </GridColumn>
                        <GridColumn Field="@(nameof(OperationDataViewModel.DisplayName))" Title="@Resources.DataDictionary.DisplayName" Width="300px" />
                        <GridColumn Field="@(nameof(OperationDataViewModel.Parent))" Title="@Resources.Models.Operation.Parent" Width="200px" />
                        <GridColumn Field="@(nameof(OperationDataViewModel.AccessTypeValue))" Title="@Resources.Models.Operation.AccessType" Width="200px" />
                    </GridColumns>
                </TelerikGrid>
            }
        </div>
    </div>
</div>

@code {

    protected ViewPagingDataResult<OperationDataViewModel> data { get; set; }
    protected SearchViewModel request { get; set; }

    protected override void OnInitialized()
    {
        data = new ViewPagingDataResult<OperationDataViewModel>();
        request = new SearchViewModel();
    }

    protected async Task ReadItems(GridReadEventArgs args = null)
    {
        request.Page = args.Request.Page;
        request.TotalCount = data.TotalCount;

        await getData();
    }

    private async Task reset()
    {
        request = new SearchViewModel();
        await getData();
    }

    private async Task search() => await getData();

    private async Task getData()
    {
        var response =
            await client.PostAsJsonAsync($"Operations/GetData", request);

        data = await response.Content.ReadFromJsonAsync<ViewPagingDataResult<OperationDataViewModel>>();
    }

    private async Task remove(int operationId)
    {
        await client.DeleteAsync($"Operations?operationId={operationId}");
        await OnInitializedAsync();
    }

}