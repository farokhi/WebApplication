
@{
    string strTitle =
        string.Format("{0} {1}",
        Resources.Actions.ListOf,
        Resources.Models.Operation.EntityName);
}

<EditForm Model="Model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <input type="hidden" @bind-value="Model.ParentId"/>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">

                <div class="form-check form-check-flat">
                    <label class="form-check-label">
                        <InputCheckbox id="isActive" class="form-check-input" @bind-Value="Model.IsActive"></InputCheckbox>@Resources.DataDictionary.IsActive<i class="input-helper"></i>
                    </label>
                </div>

            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group row">
                <label class="col-sm-3 col-form-label" for="name">@Resources.Models.Operation.Name</label>
                <div class="col-sm-9">
                    <InputText id="name" class="form-control" @bind-Value="Model.Name"></InputText>
                    <div class="error mt-2 text-danger">
                        <ValidationMessage For="() => Model.Name" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group row">
                <label class="col-sm-3 col-form-label" for="nativeName">@Resources.DataDictionary.DisplayName</label>
                <div class="col-sm-9">
                    <InputText id="nativeName" class="form-control" @bind-Value="Model.DisplayName"></InputText>
                    <div class="error mt-2 text-danger">
                        <ValidationMessage For="() => Model.DisplayName" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group row">
                <label class="col-sm-3 col-form-label" for="accessType">@Resources.Models.Operation.AccessType</label>
                <div class="col-sm-9">
                    <InputSelectEnum id="accessType" class="form-control" @bind-Value="Model.AccessType"></InputSelectEnum>
                    <div class="error mt-2 text-danger">
                        <ValidationMessage For="() => Model.AccessType" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group row">
                <label class="col-sm-3 col-form-label" for="description">@Resources.DataDictionary.Description</label>
                <div class="col-sm-9">
                    <InputTextArea id="description" class="form-control" rows="6" @bind-Value="Model.Description"></InputTextArea>
                </div>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-success mr-2">@Resources.Buttons.Submit</button>
    <a class="btn btn-light" href="/Operations">@Resources.Buttons.Cancel</a>

</EditForm>

@code
{
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [Parameter]
    public ViewModels.Operation.CreateViewModel Model { get; set; }

    private void HandleValidSubmit()
    {
        OnValidSubmit.InvokeAsync(null);
    }
}